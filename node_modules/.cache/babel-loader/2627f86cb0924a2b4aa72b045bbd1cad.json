{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DeLL\\\\Desktop\\\\search github users\\\\src\\\\components\\\\Repos.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { GithubContext } from '../context/context';\nimport { Pie, Column, Bar, Doughnut } from './Charts';\n\nconst Repos = () => {\n  const {\n    repos\n  } = React.useContext(GithubContext);\n  const languages = repos.reduce((total, item) => {\n    const {\n      language,\n      stargazers_count\n    } = item;\n    if (!language) return total;\n\n    if (!total[language]) {\n      total[language] = {\n        label: language,\n        value: 1,\n        stars: stargazers_count\n      };\n    } else {\n      total[language] = { ...total[language],\n        value: total[language].value + 1,\n        stars: total[language].stars + stargazers_count\n      };\n    }\n\n    return total;\n  }, {});\n  const mostUsed = Object.values(languages).sort((a, b) => {\n    return b.value - a.value;\n  }).slice(0, 5); // most stars per language\n\n  const mostPopular = Object.values(languages).sort((a, b) => {\n    return b.stars - a.stars;\n  }).map(item => {\n    return { ...item,\n      value: item.stars\n    };\n  }).slice(0, 5); // stars, forks\n\n  let {\n    stars,\n    forks\n  } = repos.reduce((total, item) => {\n    const {\n      stargazers_count,\n      name,\n      forks\n    } = item;\n    total.stars[stargazers_count] = {\n      label: name,\n      value: stargazers_count\n    };\n    total.forks[forks] = {\n      label: name,\n      value: forks\n    };\n    return total;\n  }, {\n    stars: {},\n    forks: {}\n  });\n  stars = Object.values(stars).slice(-5).reverse();\n  forks = Object.values(forks).slice(-5).reverse();\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    className: \"section-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pie, {\n    data: mostUsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    data: stars,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Doughnut, {\n    data: mostPopular,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    data: forks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst Wrapper = styled.div`\n  display: grid;\n  justify-items: center;\n  gap: 2rem;\n  @media (min-width: 800px) {\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media (min-width: 1200px) {\n    grid-template-columns: 2fr 3fr;\n  }\n\n  div {\n    width: 100% !important;\n  }\n  .fusioncharts-container {\n    width: 100% !important;\n  }\n  svg {\n    width: 100% !important;\n    border-radius: var(--radius) !important;\n  }\n`;\nexport default Repos;","map":{"version":3,"sources":["C:/Users/DeLL/Desktop/search github users/src/components/Repos.js"],"names":["React","styled","GithubContext","Pie","Column","Bar","Doughnut","Repos","repos","useContext","languages","reduce","total","item","language","stargazers_count","label","value","stars","mostUsed","Object","values","sort","a","b","slice","mostPopular","map","forks","name","reverse","Wrapper","div"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { GithubContext } from '../context/context';\r\nimport { Pie, Column, Bar, Doughnut } from './Charts';\r\nconst Repos = () => {\r\n  const { repos } = React.useContext(GithubContext);\r\n\r\n  const languages = repos.reduce((total, item) => {\r\n    const { language, stargazers_count } = item;\r\n    if (!language) return total;\r\n    if (!total[language]) {\r\n      total[language] = { label: language, value: 1, stars: stargazers_count };\r\n    } else {\r\n      total[language] = {\r\n        ...total[language],\r\n        value: total[language].value + 1,\r\n        stars: total[language].stars + stargazers_count,\r\n      };\r\n    }\r\n    return total;\r\n  }, {});\r\n\r\n  const mostUsed = Object.values(languages)\r\n    .sort((a, b) => {\r\n      return b.value - a.value;\r\n    })\r\n    .slice(0, 5);\r\n\r\n  // most stars per language\r\n\r\n  const mostPopular = Object.values(languages)\r\n    .sort((a, b) => {\r\n      return b.stars - a.stars;\r\n    })\r\n    .map((item) => {\r\n      return { ...item, value: item.stars };\r\n    })\r\n    .slice(0, 5);\r\n\r\n  // stars, forks\r\n\r\n  let { stars, forks } = repos.reduce(\r\n    (total, item) => {\r\n      const { stargazers_count, name, forks } = item;\r\n      total.stars[stargazers_count] = { label: name, value: stargazers_count };\r\n      total.forks[forks] = { label: name, value: forks };\r\n      return total;\r\n    },\r\n    {\r\n      stars: {},\r\n      forks: {},\r\n    }\r\n  );\r\n\r\n  stars = Object.values(stars).slice(-5).reverse();\r\n  forks = Object.values(forks).slice(-5).reverse();\r\n\r\n  return (\r\n    <section className='section'>\r\n      <Wrapper className='section-center'>\r\n        <Pie data={mostUsed} />\r\n        <Column data={stars} />\r\n        <Doughnut data={mostPopular} />\r\n        <Bar data={forks} />\r\n      </Wrapper>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  justify-items: center;\r\n  gap: 2rem;\r\n  @media (min-width: 800px) {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    grid-template-columns: 2fr 3fr;\r\n  }\r\n\r\n  div {\r\n    width: 100% !important;\r\n  }\r\n  .fusioncharts-container {\r\n    width: 100% !important;\r\n  }\r\n  svg {\r\n    width: 100% !important;\r\n    border-radius: var(--radius) !important;\r\n  }\r\n`;\r\n\r\nexport default Repos;\r\n"]},"metadata":{},"sourceType":"module"}